name: Build Docker Image

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM node:20-alpine
        
        WORKDIR /app
        
        # Copy package files
        COPY package*.json ./
        
        # Install production dependencies
        RUN npm ci --only=production && npm cache clean --force
        
        # Copy built application
        COPY dist/ ./dist/
        
        # Create non-root user
        RUN addgroup -g 1001 -S nodejs
        RUN adduser -S nodejs -u 1001
        
        # Change ownership of the app directory
        RUN chown -R nodejs:nodejs /app
        USER nodejs
        
        # Expose port
        EXPOSE 3000
        
        # Health check
        HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
          CMD curl -f http://localhost:3000/health || exit 1
        
        # Start the application
        CMD ["node", "dist/main.js"]
        EOF
    
    - name: Build Docker image
      run: |
        docker build -t employee-api:latest .
        docker build -t employee-api:${{ github.sha }} .
    
    - name: Test Docker image
      run: |
        # Start container
        docker run -d --name test-container -p 3000:3000 employee-api:latest
        
        # Wait for container to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:3000/health || exit 1
        
        # Stop and remove container
        docker stop test-container
        docker rm test-container
    
    - name: Log Docker images
      run: docker images employee-api
